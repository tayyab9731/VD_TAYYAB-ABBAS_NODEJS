
Creating tables---------------------------------------------------------------------------------------------------------------------


create table Users(
user_id int Not Null,
name varchar Not Null,
email varchar Not Null,
password varchar,
Primary Key(user_id),
Unique (name,email)
)




create table Role(
role_id int Not Null,
role_name varchar Not Null,
Primary Key(role_id ),
Unique (role_name )
)




create table Permission(
permission_id int Not Null,
permission_type varchar Not Null,
Primary Key(permission_id ),
Unique (permission_type )
)






create table User_Role
(
  id  int Not Null,
	user_id int NOT NULL,
	role_id int Not Null,
  CONSTRAINT User_Role_PK PRIMARY KEY ("user_id", "role_id"),
  CONSTRAINT user_id 
      FOREIGN KEY ("user_id") REFERENCES "Users" ("user_id"),
  CONSTRAINT role_id 
      FOREIGN KEY ("role_id") REFERENCES "Permission" ("role_id")
);






create table Role_Permission
(
  id  int Not Null,
	role_id int NOT NULL,
	permission_id int Not Null,
  CONSTRAINT Role_Per_pk PRIMARY KEY ("role_id", "permission_id"),
  CONSTRAINT role_id 
      FOREIGN KEY ("role_id") REFERENCES "Role" ("role_id"),
  CONSTRAINT permission_id 
      FOREIGN KEY ("permission_id") REFERENCES "Permission" ("permission_id")
);







Q1---------------------------------------------------------------------------------------------------



create or replace procedure my_procedure()
language plpgsql
as $$
begin
	insert into users (user_id,name,role_id) values (1,'Tayyab');
        SET @user_id = LAST_INSERT_ID();
insert into Role (role_id,role_name) values (2,'customer');
        SET @role_id = LAST_INSERT_ID();
     INSERT INTO User_Role(user_id,role_id) VALUES(@user_id, @role_id);
end;
$$;

call my_procedure()

select * from users



Q2---------------------------------------------------------------------------------------------------



create or replace procedure my_procedure()
language plpgsql
as $$
begin
	
insert into Role (role_id,role_name) values (2,'customer');
        SET @role_id = LAST_INSERT_ID();
insert into Permission(permission_id,permission_type) values (1,'Update');
        SET @permission_id = LAST_INSERT_ID();
     INSERT INTO Role_Permission(role_id,permission_id ) VALUES( @role_id,@permission_id );
end;
$$;

call my_procedure()

select * from Role


Q3-------------------------------------------------------------------------------------------------------------------

SELECT "Users"."Name","Users"."Email",r."role_name",p."permission_type"
FROM "Users"
INNER JOIN "user_role" as ur
    ON "Users"."user_id" = ur."user_id"
INNER JOIN "Role" as r
    ON r."role_id" = ur."role_id"
	INNER JOIN "role_permission" as rp
    ON rp."role_id" = r."role_id"
INNER JOIN "Permission" as p
    ON rp."permission_id" = p."permission_id"
	
WHERE "Users"."Name" = 'some value'
